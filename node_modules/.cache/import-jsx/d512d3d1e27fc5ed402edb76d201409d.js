// Table.js

const React = require("react");
const {
  useState,
  useEffect
} = React;
// Destructuring useState and useEffect from React

const {
  Box,
  Text,
  Newline
} = require("ink");
// Destructuring the components we need from ink

//const cryptoData = require('../data.json');
// Fetching mock data

const Table = () => {
  const [data, setData] = useState([]);

  // useEffect(()=>{
  //     setData(cryptoData);
  // });

  return /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    padding: 2,
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Box, {
    width: "25%"
  }, /*#__PURE__*/React.createElement(Text, null, "COIN")), /*#__PURE__*/React.createElement(Box, {
    width: "25%"
  }, /*#__PURE__*/React.createElement(Text, null, "PRICE (USD)")), /*#__PURE__*/React.createElement(Box, {
    width: "25%"
  }, /*#__PURE__*/React.createElement(Text, null, "24 HOUR CHANGE")), /*#__PURE__*/React.createElement(Box, {
    width: "25%"
  }, /*#__PURE__*/React.createElement(Text, null, "ALL TIME HIGH"))), /*#__PURE__*/React.createElement(Newline, null));
};
module.exports = Table;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJveCIsIlRleHQiLCJOZXdsaW5lIiwiVGFibGUiLCJkYXRhIiwic2V0RGF0YSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJ0YWJsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUYWJsZS5qc1xyXG5cclxuY29uc3QgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XHJcblxyXG5jb25zdCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSA9IFJlYWN0O1xyXG4vLyBEZXN0cnVjdHVyaW5nIHVzZVN0YXRlIGFuZCB1c2VFZmZlY3QgZnJvbSBSZWFjdFxyXG5cclxuY29uc3QgeyBCb3gsIFRleHQsIE5ld2xpbmUgfSA9IHJlcXVpcmUoXCJpbmtcIik7XHJcbi8vIERlc3RydWN0dXJpbmcgdGhlIGNvbXBvbmVudHMgd2UgbmVlZCBmcm9tIGlua1xyXG5cclxuLy9jb25zdCBjcnlwdG9EYXRhID0gcmVxdWlyZSgnLi4vZGF0YS5qc29uJyk7XHJcbi8vIEZldGNoaW5nIG1vY2sgZGF0YVxyXG5cclxuY29uc3QgVGFibGUgPSAoKSA9PiB7XHJcbiAgY29uc3QgW2RhdGEsIHNldERhdGFdID0gdXNlU3RhdGUoW10pO1xyXG5cclxuICAvLyB1c2VFZmZlY3QoKCk9PntcclxuICAvLyAgICAgc2V0RGF0YShjcnlwdG9EYXRhKTtcclxuICAvLyB9KTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxCb3ggYm9yZGVyU3R5bGU9XCJzaW5nbGVcIiBwYWRkaW5nPXsyfSBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCI+XHJcbiAgICAgIDxCb3g+XHJcbiAgICAgICAgPEJveCB3aWR0aD1cIjI1JVwiPlxyXG4gICAgICAgICAgPFRleHQ+Q09JTjwvVGV4dD5cclxuICAgICAgICA8L0JveD5cclxuICAgICAgICA8Qm94IHdpZHRoPVwiMjUlXCI+XHJcbiAgICAgICAgICA8VGV4dD5QUklDRSAoVVNEKTwvVGV4dD5cclxuICAgICAgICA8L0JveD5cclxuICAgICAgICA8Qm94IHdpZHRoPVwiMjUlXCI+XHJcbiAgICAgICAgICA8VGV4dD4yNCBIT1VSIENIQU5HRTwvVGV4dD5cclxuICAgICAgICA8L0JveD5cclxuICAgICAgICA8Qm94IHdpZHRoPVwiMjUlXCI+XHJcbiAgICAgICAgICA8VGV4dD5BTEwgVElNRSBISUdIPC9UZXh0PlxyXG4gICAgICAgIDwvQm94PlxyXG4gICAgICA8L0JveD5cclxuICAgICAgPE5ld2xpbmUgLz5cclxuICAgICAgey8qIHtcclxuICAgICAgICAgICAgICAgIGRhdGEubWFwKCh7aWQsIG5hbWUsIGN1cnJlbnRfcHJpY2UsIHByaWNlX2NoYW5nZV9wZXJjZW50YWdlXzI0aCwgYXRofSkgPT4gKFxyXG4gICAgICAgICAgICAgICAgICAgIDxCb3gga2V5PXtpZH0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCb3ggd2lkdGg9JzI1JSc+PFRleHQ+e25hbWV9PC9UZXh0PjwvQm94PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8Qm94IHdpZHRoPScyNSUnPjxUZXh0PntjdXJyZW50X3ByaWNlfTwvVGV4dD48L0JveD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPEJveCB3aWR0aD0nMjUlJz48VGV4dD57cHJpY2VfY2hhbmdlX3BlcmNlbnRhZ2VfMjRofTwvVGV4dD48L0JveD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPEJveCB3aWR0aD0nMjUlJz48VGV4dD57YXRofTwvVGV4dD48L0JveD5cclxuICAgICAgICAgICAgICAgICAgICA8L0JveD5cclxuICAgICAgICAgICAgICAgICkpXHJcbiAgICAgICAgICAgIH0gKi99XHJcbiAgICA8L0JveD5cclxuICApO1xyXG59O1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBUYWJsZTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFFOUIsTUFBTTtFQUFFQyxRQUFRO0VBQUVDO0FBQVUsQ0FBQyxHQUFHSCxLQUFLO0FBQ3JDOztBQUVBLE1BQU07RUFBRUksR0FBRztFQUFFQyxJQUFJO0VBQUVDO0FBQVEsQ0FBQyxHQUFHTCxPQUFPLENBQUMsS0FBSyxDQUFDO0FBQzdDOztBQUVBO0FBQ0E7O0FBRUEsTUFBTU0sS0FBSyxHQUFHLE1BQU07RUFDbEIsTUFBTSxDQUFDQyxJQUFJLEVBQUVDLE9BQU8sQ0FBQyxHQUFHUCxRQUFRLENBQUMsRUFBRSxDQUFDOztFQUVwQztFQUNBO0VBQ0E7O0VBRUEsb0JBQ0Usb0JBQUMsR0FBRztJQUFDLFdBQVcsRUFBQyxRQUFRO0lBQUMsT0FBTyxFQUFFLENBQUU7SUFBQyxhQUFhLEVBQUM7RUFBUSxnQkFDMUQsb0JBQUMsR0FBRyxxQkFDRixvQkFBQyxHQUFHO0lBQUMsS0FBSyxFQUFDO0VBQUssZ0JBQ2Qsb0JBQUMsSUFBSSxlQUFZLENBQ2IsZUFDTixvQkFBQyxHQUFHO0lBQUMsS0FBSyxFQUFDO0VBQUssZ0JBQ2Qsb0JBQUMsSUFBSSxzQkFBbUIsQ0FDcEIsZUFDTixvQkFBQyxHQUFHO0lBQUMsS0FBSyxFQUFDO0VBQUssZ0JBQ2Qsb0JBQUMsSUFBSSx5QkFBc0IsQ0FDdkIsZUFDTixvQkFBQyxHQUFHO0lBQUMsS0FBSyxFQUFDO0VBQUssZ0JBQ2Qsb0JBQUMsSUFBSSx3QkFBcUIsQ0FDdEIsQ0FDRixlQUNOLG9CQUFDLE9BQU8sT0FBRyxDQVdQO0FBRVYsQ0FBQztBQUVEUSxNQUFNLENBQUNDLE9BQU8sR0FBR0osS0FBSyJ9