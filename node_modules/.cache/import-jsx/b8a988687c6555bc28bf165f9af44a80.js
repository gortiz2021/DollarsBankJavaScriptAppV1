// Table.js

const React = require('react');
const {
  useState,
  useEffect
} = React;
// Destructuring useState and useEffect from React

const {
  Box,
  Text,
  Newline
} = require('ink');
// Destructuring the components we need from ink

//const cryptoData = require('../data.json');
// Fetching mock data

const Table = () => {
  const [data, setData] = useState([]);

  // useEffect(()=>{
  //     setData(cryptoData);
  // });

  return /*#__PURE__*/React.createElement(Box, {
    borderStyle: "single",
    padding: 2,
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Box, {
    width: "25%"
  }, /*#__PURE__*/React.createElement(Text, null, "COIN")), /*#__PURE__*/React.createElement(Box, {
    width: "25%"
  }, /*#__PURE__*/React.createElement(Text, null, "PRICE (USD)")), /*#__PURE__*/React.createElement(Box, {
    width: "25%"
  }, /*#__PURE__*/React.createElement(Text, null, "24 HOUR CHANGE")), /*#__PURE__*/React.createElement(Box, {
    width: "25%"
  }, /*#__PURE__*/React.createElement(Text, null, "ALL TIME HIGH"))), /*#__PURE__*/React.createElement(Newline, null));
};
module.exports = Table;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkJveCIsIlRleHQiLCJOZXdsaW5lIiwiVGFibGUiLCJkYXRhIiwic2V0RGF0YSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJ0YWJsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUYWJsZS5qc1xyXG5cclxuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xyXG5cclxuY29uc3QgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gPSBSZWFjdDtcclxuLy8gRGVzdHJ1Y3R1cmluZyB1c2VTdGF0ZSBhbmQgdXNlRWZmZWN0IGZyb20gUmVhY3RcclxuXHJcbmNvbnN0IHsgQm94LCBUZXh0LCBOZXdsaW5lIH0gPSByZXF1aXJlKCdpbmsnKTtcclxuLy8gRGVzdHJ1Y3R1cmluZyB0aGUgY29tcG9uZW50cyB3ZSBuZWVkIGZyb20gaW5rXHJcblxyXG4vL2NvbnN0IGNyeXB0b0RhdGEgPSByZXF1aXJlKCcuLi9kYXRhLmpzb24nKTtcclxuLy8gRmV0Y2hpbmcgbW9jayBkYXRhXHJcblxyXG5jb25zdCBUYWJsZSA9ICgpID0+IHtcclxuXHJcbiAgICBjb25zdCBbZGF0YSwgc2V0RGF0YV0gPSB1c2VTdGF0ZShbXSk7XHJcblxyXG4gICAgLy8gdXNlRWZmZWN0KCgpPT57XHJcbiAgICAvLyAgICAgc2V0RGF0YShjcnlwdG9EYXRhKTtcclxuICAgIC8vIH0pO1xyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPEJveCBib3JkZXJTdHlsZT0nc2luZ2xlJyBwYWRkaW5nPXsyfSBmbGV4RGlyZWN0aW9uPSdjb2x1bW4nPlxyXG4gICAgICAgICAgICA8Qm94PlxyXG4gICAgICAgICAgICAgICAgPEJveCB3aWR0aD0nMjUlJz48VGV4dD5DT0lOPC9UZXh0PjwvQm94PlxyXG4gICAgICAgICAgICAgICAgPEJveCB3aWR0aD0nMjUlJz48VGV4dD5QUklDRSAoVVNEKTwvVGV4dD48L0JveD5cclxuICAgICAgICAgICAgICAgIDxCb3ggd2lkdGg9JzI1JSc+PFRleHQ+MjQgSE9VUiBDSEFOR0U8L1RleHQ+PC9Cb3g+XHJcbiAgICAgICAgICAgICAgICA8Qm94IHdpZHRoPScyNSUnPjxUZXh0PkFMTCBUSU1FIEhJR0g8L1RleHQ+PC9Cb3g+XHJcbiAgICAgICAgICAgIDwvQm94PlxyXG4gICAgICAgICAgICA8TmV3bGluZS8+XHJcbiAgICAgICAgICAgIHsvKiB7XHJcbiAgICAgICAgICAgICAgICBkYXRhLm1hcCgoe2lkLCBuYW1lLCBjdXJyZW50X3ByaWNlLCBwcmljZV9jaGFuZ2VfcGVyY2VudGFnZV8yNGgsIGF0aH0pID0+IChcclxuICAgICAgICAgICAgICAgICAgICA8Qm94IGtleT17aWR9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8Qm94IHdpZHRoPScyNSUnPjxUZXh0PntuYW1lfTwvVGV4dD48L0JveD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPEJveCB3aWR0aD0nMjUlJz48VGV4dD57Y3VycmVudF9wcmljZX08L1RleHQ+PC9Cb3g+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCb3ggd2lkdGg9JzI1JSc+PFRleHQ+e3ByaWNlX2NoYW5nZV9wZXJjZW50YWdlXzI0aH08L1RleHQ+PC9Cb3g+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCb3ggd2lkdGg9JzI1JSc+PFRleHQ+e2F0aH08L1RleHQ+PC9Cb3g+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9Cb3g+XHJcbiAgICAgICAgICAgICAgICApKVxyXG4gICAgICAgICAgICB9ICovfVxyXG4gICAgICAgIDwvQm94PlxyXG4gICAgKVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFRhYmxlOyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBRTlCLE1BQU07RUFBRUMsUUFBUTtFQUFFQztBQUFVLENBQUMsR0FBR0gsS0FBSztBQUNyQzs7QUFFQSxNQUFNO0VBQUVJLEdBQUc7RUFBRUMsSUFBSTtFQUFFQztBQUFRLENBQUMsR0FBR0wsT0FBTyxDQUFDLEtBQUssQ0FBQztBQUM3Qzs7QUFFQTtBQUNBOztBQUVBLE1BQU1NLEtBQUssR0FBRyxNQUFNO0VBRWhCLE1BQU0sQ0FBQ0MsSUFBSSxFQUFFQyxPQUFPLENBQUMsR0FBR1AsUUFBUSxDQUFDLEVBQUUsQ0FBQzs7RUFFcEM7RUFDQTtFQUNBOztFQUVBLG9CQUNJLG9CQUFDLEdBQUc7SUFBQyxXQUFXLEVBQUMsUUFBUTtJQUFDLE9BQU8sRUFBRSxDQUFFO0lBQUMsYUFBYSxFQUFDO0VBQVEsZ0JBQ3hELG9CQUFDLEdBQUcscUJBQ0Esb0JBQUMsR0FBRztJQUFDLEtBQUssRUFBQztFQUFLLGdCQUFDLG9CQUFDLElBQUksZUFBWSxDQUFNLGVBQ3hDLG9CQUFDLEdBQUc7SUFBQyxLQUFLLEVBQUM7RUFBSyxnQkFBQyxvQkFBQyxJQUFJLHNCQUFtQixDQUFNLGVBQy9DLG9CQUFDLEdBQUc7SUFBQyxLQUFLLEVBQUM7RUFBSyxnQkFBQyxvQkFBQyxJQUFJLHlCQUFzQixDQUFNLGVBQ2xELG9CQUFDLEdBQUc7SUFBQyxLQUFLLEVBQUM7RUFBSyxnQkFBQyxvQkFBQyxJQUFJLHdCQUFxQixDQUFNLENBQy9DLGVBQ04sb0JBQUMsT0FBTyxPQUFFLENBV1I7QUFFZCxDQUFDO0FBRURRLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHSixLQUFLIn0=