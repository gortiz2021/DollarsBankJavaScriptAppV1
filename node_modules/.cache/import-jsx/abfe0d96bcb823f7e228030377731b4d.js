const React = require("react");
const Gradient = require("ink-gradient");
const BigText = require("ink-big-text");
const {
  Box,
  Text,
  useInput,
  useApp
} = require("ink");
const importJsx = require("import-jsx");
//const Transaction = importJsx(".components/Transaction.js");
//const OpenAccount = importJsx("./components/openAccount");

const Options = () => {
  const {
    exit
  } = useApp();
  useInput(input => {
    if (input === "q") {
      exit();
      console.log("Goodbye!");
    }
    if (input === "1") {
      console.log("{input} was pressed");
      //<Transaction />;
    }

    if (input === "2") {
      console.log("2 was pressed");
      //<OpenAccount />;
    }
  });

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Gradient, {
    name: "instagram"
  }, /*#__PURE__*/React.createElement(BigText, {
    text: "Dollars Bank ATM Welcomes You!!",
    align: "left",
    font: "shade"
  })), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Text, null, "Please Select an option:"), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "1. Transaction")), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "2. New Account")), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "q. Exit")))));
};
module.exports = Options;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJHcmFkaWVudCIsIkJpZ1RleHQiLCJCb3giLCJUZXh0IiwidXNlSW5wdXQiLCJ1c2VBcHAiLCJpbXBvcnRKc3giLCJPcHRpb25zIiwiZXhpdCIsImlucHV0IiwiY29uc29sZSIsImxvZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJzdGFydHVwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xyXG5jb25zdCBHcmFkaWVudCA9IHJlcXVpcmUoXCJpbmstZ3JhZGllbnRcIik7XHJcbmNvbnN0IEJpZ1RleHQgPSByZXF1aXJlKFwiaW5rLWJpZy10ZXh0XCIpO1xyXG5jb25zdCB7IEJveCwgVGV4dCwgdXNlSW5wdXQsIHVzZUFwcCB9ID0gcmVxdWlyZShcImlua1wiKTtcclxuY29uc3QgaW1wb3J0SnN4ID0gcmVxdWlyZShcImltcG9ydC1qc3hcIik7XHJcbi8vY29uc3QgVHJhbnNhY3Rpb24gPSBpbXBvcnRKc3goXCIuY29tcG9uZW50cy9UcmFuc2FjdGlvbi5qc1wiKTtcclxuLy9jb25zdCBPcGVuQWNjb3VudCA9IGltcG9ydEpzeChcIi4vY29tcG9uZW50cy9vcGVuQWNjb3VudFwiKTtcclxuXHJcbmNvbnN0IE9wdGlvbnMgPSAoKSA9PiB7XHJcbiAgY29uc3QgeyBleGl0IH0gPSB1c2VBcHAoKTtcclxuICB1c2VJbnB1dCgoaW5wdXQpID0+IHtcclxuICAgIGlmIChpbnB1dCA9PT0gXCJxXCIpIHtcclxuICAgICAgZXhpdCgpO1xyXG4gICAgICBjb25zb2xlLmxvZyhcIkdvb2RieWUhXCIpO1xyXG4gICAgfVxyXG4gICAgaWYgKGlucHV0ID09PSBcIjFcIikge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIntpbnB1dH0gd2FzIHByZXNzZWRcIik7XHJcbiAgICAgIC8vPFRyYW5zYWN0aW9uIC8+O1xyXG4gICAgfVxyXG4gICAgaWYgKGlucHV0ID09PSBcIjJcIikge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIjIgd2FzIHByZXNzZWRcIik7XHJcbiAgICAgIC8vPE9wZW5BY2NvdW50IC8+O1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPEdyYWRpZW50IG5hbWU9XCJpbnN0YWdyYW1cIj5cclxuICAgICAgICA8QmlnVGV4dFxyXG4gICAgICAgICAgdGV4dD1cIkRvbGxhcnMgQmFuayBBVE0gV2VsY29tZXMgWW91ISFcIlxyXG4gICAgICAgICAgYWxpZ249XCJsZWZ0XCJcclxuICAgICAgICAgIGZvbnQ9XCJzaGFkZVwiXHJcbiAgICAgICAgLz5cclxuICAgICAgPC9HcmFkaWVudD5cclxuICAgICAgPEJveD5cclxuICAgICAgICA8Qm94IGZsZXhEaXJlY3Rpb249XCJjb2x1bW5cIj5cclxuICAgICAgICAgIDxUZXh0PlBsZWFzZSBTZWxlY3QgYW4gb3B0aW9uOjwvVGV4dD5cclxuICAgICAgICAgIDxCb3g+XHJcbiAgICAgICAgICAgIDxUZXh0PjEuIFRyYW5zYWN0aW9uPC9UZXh0PlxyXG4gICAgICAgICAgPC9Cb3g+XHJcbiAgICAgICAgICA8Qm94PlxyXG4gICAgICAgICAgICA8VGV4dD4yLiBOZXcgQWNjb3VudDwvVGV4dD5cclxuICAgICAgICAgIDwvQm94PlxyXG4gICAgICAgICAgPEJveD5cclxuICAgICAgICAgICAgPFRleHQ+cS4gRXhpdDwvVGV4dD5cclxuICAgICAgICAgIDwvQm94PlxyXG4gICAgICAgIDwvQm94PlxyXG4gICAgICA8L0JveD5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IE9wdGlvbnM7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLE1BQU1DLFFBQVEsR0FBR0QsT0FBTyxDQUFDLGNBQWMsQ0FBQztBQUN4QyxNQUFNRSxPQUFPLEdBQUdGLE9BQU8sQ0FBQyxjQUFjLENBQUM7QUFDdkMsTUFBTTtFQUFFRyxHQUFHO0VBQUVDLElBQUk7RUFBRUMsUUFBUTtFQUFFQztBQUFPLENBQUMsR0FBR04sT0FBTyxDQUFDLEtBQUssQ0FBQztBQUN0RCxNQUFNTyxTQUFTLEdBQUdQLE9BQU8sQ0FBQyxZQUFZLENBQUM7QUFDdkM7QUFDQTs7QUFFQSxNQUFNUSxPQUFPLEdBQUcsTUFBTTtFQUNwQixNQUFNO0lBQUVDO0VBQUssQ0FBQyxHQUFHSCxNQUFNLEVBQUU7RUFDekJELFFBQVEsQ0FBRUssS0FBSyxJQUFLO0lBQ2xCLElBQUlBLEtBQUssS0FBSyxHQUFHLEVBQUU7TUFDakJELElBQUksRUFBRTtNQUNORSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxVQUFVLENBQUM7SUFDekI7SUFDQSxJQUFJRixLQUFLLEtBQUssR0FBRyxFQUFFO01BQ2pCQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQztNQUNsQztJQUNGOztJQUNBLElBQUlGLEtBQUssS0FBSyxHQUFHLEVBQUU7TUFDakJDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGVBQWUsQ0FBQztNQUM1QjtJQUNGO0VBQ0YsQ0FBQyxDQUFDOztFQUVGLG9CQUNFLHVEQUNFLG9CQUFDLFFBQVE7SUFBQyxJQUFJLEVBQUM7RUFBVyxnQkFDeEIsb0JBQUMsT0FBTztJQUNOLElBQUksRUFBQyxpQ0FBaUM7SUFDdEMsS0FBSyxFQUFDLE1BQU07SUFDWixJQUFJLEVBQUM7RUFBTyxFQUNaLENBQ08sZUFDWCxvQkFBQyxHQUFHLHFCQUNGLG9CQUFDLEdBQUc7SUFBQyxhQUFhLEVBQUM7RUFBUSxnQkFDekIsb0JBQUMsSUFBSSxtQ0FBZ0MsZUFDckMsb0JBQUMsR0FBRyxxQkFDRixvQkFBQyxJQUFJLHlCQUFzQixDQUN2QixlQUNOLG9CQUFDLEdBQUcscUJBQ0Ysb0JBQUMsSUFBSSx5QkFBc0IsQ0FDdkIsZUFDTixvQkFBQyxHQUFHLHFCQUNGLG9CQUFDLElBQUksa0JBQWUsQ0FDaEIsQ0FDRixDQUNGLENBQ0w7QUFFUCxDQUFDO0FBRURDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHTixPQUFPIn0=