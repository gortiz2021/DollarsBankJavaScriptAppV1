const React = require("react");
const {
  useState
} = React;
// Destructuring useState and useEffect from React

const {
  Box,
  Text,
  Newline
} = require("ink");
const {
  default: TextInput
} = require("ink-text-input");
// Destructuring the components we need from ink

const useInput = () => {
  const [input, setInput] = useState("");
  const handleSubmit = input => {
    if (input === 1) {
      return "1 was pressed.";
    }
  };
  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Box, {
    marginRight: 1
  }, /*#__PURE__*/React.createElement(Text, null, "Please Select an option: ")), /*#__PURE__*/React.createElement(TextInput, {
    value: input,
    onChange: setInput,
    onSubmit: handleSubmit
  }));
};
module.exports = useInput;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsIkJveCIsIlRleHQiLCJOZXdsaW5lIiwiZGVmYXVsdCIsIlRleHRJbnB1dCIsInVzZUlucHV0IiwiaW5wdXQiLCJzZXRJbnB1dCIsImhhbmRsZVN1Ym1pdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJzdGFydHVwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xyXG5cclxuY29uc3QgeyB1c2VTdGF0ZSB9ID0gUmVhY3Q7XHJcbi8vIERlc3RydWN0dXJpbmcgdXNlU3RhdGUgYW5kIHVzZUVmZmVjdCBmcm9tIFJlYWN0XHJcblxyXG5jb25zdCB7IEJveCwgVGV4dCwgTmV3bGluZSB9ID0gcmVxdWlyZShcImlua1wiKTtcclxuY29uc3QgeyBkZWZhdWx0OiBUZXh0SW5wdXQgfSA9IHJlcXVpcmUoXCJpbmstdGV4dC1pbnB1dFwiKTtcclxuLy8gRGVzdHJ1Y3R1cmluZyB0aGUgY29tcG9uZW50cyB3ZSBuZWVkIGZyb20gaW5rXHJcblxyXG5jb25zdCB1c2VJbnB1dCA9ICgpID0+IHtcclxuICBjb25zdCBbaW5wdXQsIHNldElucHV0XSA9IHVzZVN0YXRlKFwiXCIpO1xyXG4gIGNvbnN0IGhhbmRsZVN1Ym1pdCA9IChpbnB1dCkgPT4ge1xyXG4gICAgaWYgKGlucHV0ID09PSAxKSB7XHJcbiAgICAgIHJldHVybiBcIjEgd2FzIHByZXNzZWQuXCI7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxCb3g+XHJcbiAgICAgIDxCb3ggbWFyZ2luUmlnaHQ9ezF9PlxyXG4gICAgICAgIDxUZXh0PlBsZWFzZSBTZWxlY3QgYW4gb3B0aW9uOiA8L1RleHQ+XHJcbiAgICAgIDwvQm94PlxyXG5cclxuICAgICAgPFRleHRJbnB1dCB2YWx1ZT17aW5wdXR9IG9uQ2hhbmdlPXtzZXRJbnB1dH0gb25TdWJtaXQ9e2hhbmRsZVN1Ym1pdH0gLz5cclxuICAgIDwvQm94PlxyXG4gICk7XHJcbn07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHVzZUlucHV0O1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUU5QixNQUFNO0VBQUVDO0FBQVMsQ0FBQyxHQUFHRixLQUFLO0FBQzFCOztBQUVBLE1BQU07RUFBRUcsR0FBRztFQUFFQyxJQUFJO0VBQUVDO0FBQVEsQ0FBQyxHQUFHSixPQUFPLENBQUMsS0FBSyxDQUFDO0FBQzdDLE1BQU07RUFBRUssT0FBTyxFQUFFQztBQUFVLENBQUMsR0FBR04sT0FBTyxDQUFDLGdCQUFnQixDQUFDO0FBQ3hEOztBQUVBLE1BQU1PLFFBQVEsR0FBRyxNQUFNO0VBQ3JCLE1BQU0sQ0FBQ0MsS0FBSyxFQUFFQyxRQUFRLENBQUMsR0FBR1IsUUFBUSxDQUFDLEVBQUUsQ0FBQztFQUN0QyxNQUFNUyxZQUFZLEdBQUlGLEtBQUssSUFBSztJQUM5QixJQUFJQSxLQUFLLEtBQUssQ0FBQyxFQUFFO01BQ2YsT0FBTyxnQkFBZ0I7SUFDekI7RUFDRixDQUFDO0VBRUQsb0JBQ0Usb0JBQUMsR0FBRyxxQkFDRixvQkFBQyxHQUFHO0lBQUMsV0FBVyxFQUFFO0VBQUUsZ0JBQ2xCLG9CQUFDLElBQUksb0NBQWlDLENBQ2xDLGVBRU4sb0JBQUMsU0FBUztJQUFDLEtBQUssRUFBRUEsS0FBTTtJQUFDLFFBQVEsRUFBRUMsUUFBUztJQUFDLFFBQVEsRUFBRUM7RUFBYSxFQUFHLENBQ25FO0FBRVYsQ0FBQztBQUVEQyxNQUFNLENBQUNDLE9BQU8sR0FBR0wsUUFBUSJ9