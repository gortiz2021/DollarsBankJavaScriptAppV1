const React = require("react");
const Gradient = require("ink-gradient");
const BigText = require("ink-big-text");
const {
  Box,
  Text,
  useInput,
  useApp
} = require("ink");
const importJsx = require("import-jsx");
const Transaction = importJsx("./Transaction");
const OpenAccount = importJsx("./OpenAccount");
const Options = () => {
  const {
    exit
  } = useApp();
  useInput(input => {
    console.log(input, "was pressed during transaction");
    if (input === "q") {
      exit();
      console.log("Goodbye!");
    }
    if (input === "1") {
      /*#__PURE__*/React.createElement(Transaction, null);
    }
    if (input === "2") {
      /*#__PURE__*/React.createElement(OpenAccount, null);
    }
  });
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Gradient, {
    name: "instagram"
  }, /*#__PURE__*/React.createElement(BigText, {
    text: "Dollars Bank ATM Welcomes You!!",
    align: "left",
    font: "shade"
  })), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Text, null, "Please Select an option:"), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "1. Transaction")), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "2. New Account")), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "q. Exit")))));
};
module.exports = Options;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJHcmFkaWVudCIsIkJpZ1RleHQiLCJCb3giLCJUZXh0IiwidXNlSW5wdXQiLCJ1c2VBcHAiLCJpbXBvcnRKc3giLCJUcmFuc2FjdGlvbiIsIk9wZW5BY2NvdW50IiwiT3B0aW9ucyIsImV4aXQiLCJpbnB1dCIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsic3RhcnR1cC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcclxuY29uc3QgR3JhZGllbnQgPSByZXF1aXJlKFwiaW5rLWdyYWRpZW50XCIpO1xyXG5jb25zdCBCaWdUZXh0ID0gcmVxdWlyZShcImluay1iaWctdGV4dFwiKTtcclxuY29uc3QgeyBCb3gsIFRleHQsIHVzZUlucHV0LCB1c2VBcHAgfSA9IHJlcXVpcmUoXCJpbmtcIik7XHJcbmNvbnN0IGltcG9ydEpzeCA9IHJlcXVpcmUoXCJpbXBvcnQtanN4XCIpO1xyXG5jb25zdCBUcmFuc2FjdGlvbiA9IGltcG9ydEpzeChcIi4vVHJhbnNhY3Rpb25cIik7XHJcbmNvbnN0IE9wZW5BY2NvdW50ID0gaW1wb3J0SnN4KFwiLi9PcGVuQWNjb3VudFwiKTtcclxuXHJcbmNvbnN0IE9wdGlvbnMgPSAoKSA9PiB7XHJcbiAgY29uc3QgeyBleGl0IH0gPSB1c2VBcHAoKTtcclxuICB1c2VJbnB1dCgoaW5wdXQpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGlucHV0LCBcIndhcyBwcmVzc2VkIGR1cmluZyB0cmFuc2FjdGlvblwiKTtcclxuICAgIGlmIChpbnB1dCA9PT0gXCJxXCIpIHtcclxuICAgICAgZXhpdCgpO1xyXG4gICAgICBjb25zb2xlLmxvZyhcIkdvb2RieWUhXCIpO1xyXG4gICAgfVxyXG4gICAgaWYgKGlucHV0ID09PSBcIjFcIikge1xyXG4gICAgICA8VHJhbnNhY3Rpb24gLz47XHJcbiAgICB9XHJcbiAgICBpZiAoaW5wdXQgPT09IFwiMlwiKSB7XHJcbiAgICAgIDxPcGVuQWNjb3VudCAvPjtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDw+XHJcbiAgICAgIDxHcmFkaWVudCBuYW1lPVwiaW5zdGFncmFtXCI+XHJcbiAgICAgICAgPEJpZ1RleHRcclxuICAgICAgICAgIHRleHQ9XCJEb2xsYXJzIEJhbmsgQVRNIFdlbGNvbWVzIFlvdSEhXCJcclxuICAgICAgICAgIGFsaWduPVwibGVmdFwiXHJcbiAgICAgICAgICBmb250PVwic2hhZGVcIlxyXG4gICAgICAgIC8+XHJcbiAgICAgIDwvR3JhZGllbnQ+XHJcbiAgICAgIDxCb3g+XHJcbiAgICAgICAgPEJveCBmbGV4RGlyZWN0aW9uPVwiY29sdW1uXCI+XHJcbiAgICAgICAgICA8VGV4dD5QbGVhc2UgU2VsZWN0IGFuIG9wdGlvbjo8L1RleHQ+XHJcbiAgICAgICAgICA8Qm94PlxyXG4gICAgICAgICAgICA8VGV4dD4xLiBUcmFuc2FjdGlvbjwvVGV4dD5cclxuICAgICAgICAgIDwvQm94PlxyXG4gICAgICAgICAgPEJveD5cclxuICAgICAgICAgICAgPFRleHQ+Mi4gTmV3IEFjY291bnQ8L1RleHQ+XHJcbiAgICAgICAgICA8L0JveD5cclxuICAgICAgICAgIDxCb3g+XHJcbiAgICAgICAgICAgIDxUZXh0PnEuIEV4aXQ8L1RleHQ+XHJcbiAgICAgICAgICA8L0JveD5cclxuICAgICAgICA8L0JveD5cclxuICAgICAgPC9Cb3g+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBPcHRpb25zO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUM5QixNQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxjQUFjLENBQUM7QUFDeEMsTUFBTUUsT0FBTyxHQUFHRixPQUFPLENBQUMsY0FBYyxDQUFDO0FBQ3ZDLE1BQU07RUFBRUcsR0FBRztFQUFFQyxJQUFJO0VBQUVDLFFBQVE7RUFBRUM7QUFBTyxDQUFDLEdBQUdOLE9BQU8sQ0FBQyxLQUFLLENBQUM7QUFDdEQsTUFBTU8sU0FBUyxHQUFHUCxPQUFPLENBQUMsWUFBWSxDQUFDO0FBQ3ZDLE1BQU1RLFdBQVcsR0FBR0QsU0FBUyxDQUFDLGVBQWUsQ0FBQztBQUM5QyxNQUFNRSxXQUFXLEdBQUdGLFNBQVMsQ0FBQyxlQUFlLENBQUM7QUFFOUMsTUFBTUcsT0FBTyxHQUFHLE1BQU07RUFDcEIsTUFBTTtJQUFFQztFQUFLLENBQUMsR0FBR0wsTUFBTSxFQUFFO0VBQ3pCRCxRQUFRLENBQUVPLEtBQUssSUFBSztJQUNsQkMsT0FBTyxDQUFDQyxHQUFHLENBQUNGLEtBQUssRUFBRSxnQ0FBZ0MsQ0FBQztJQUNwRCxJQUFJQSxLQUFLLEtBQUssR0FBRyxFQUFFO01BQ2pCRCxJQUFJLEVBQUU7TUFDTkUsT0FBTyxDQUFDQyxHQUFHLENBQUMsVUFBVSxDQUFDO0lBQ3pCO0lBQ0EsSUFBSUYsS0FBSyxLQUFLLEdBQUcsRUFBRTtNQUNqQixpQ0FBQyxXQUFXLE9BQUc7SUFDakI7SUFDQSxJQUFJQSxLQUFLLEtBQUssR0FBRyxFQUFFO01BQ2pCLGlDQUFDLFdBQVcsT0FBRztJQUNqQjtFQUNGLENBQUMsQ0FBQztFQUVGLG9CQUNFLHVEQUNFLG9CQUFDLFFBQVE7SUFBQyxJQUFJLEVBQUM7RUFBVyxnQkFDeEIsb0JBQUMsT0FBTztJQUNOLElBQUksRUFBQyxpQ0FBaUM7SUFDdEMsS0FBSyxFQUFDLE1BQU07SUFDWixJQUFJLEVBQUM7RUFBTyxFQUNaLENBQ08sZUFDWCxvQkFBQyxHQUFHLHFCQUNGLG9CQUFDLEdBQUc7SUFBQyxhQUFhLEVBQUM7RUFBUSxnQkFDekIsb0JBQUMsSUFBSSxtQ0FBZ0MsZUFDckMsb0JBQUMsR0FBRyxxQkFDRixvQkFBQyxJQUFJLHlCQUFzQixDQUN2QixlQUNOLG9CQUFDLEdBQUcscUJBQ0Ysb0JBQUMsSUFBSSx5QkFBc0IsQ0FDdkIsZUFDTixvQkFBQyxHQUFHLHFCQUNGLG9CQUFDLElBQUksa0JBQWUsQ0FDaEIsQ0FDRixDQUNGLENBQ0w7QUFFUCxDQUFDO0FBRURHLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHTixPQUFPIn0=